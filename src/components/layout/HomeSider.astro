---
import { HomeSiderType, HomeSiderSegmentType } from '@constants/enum';
import { cn } from '@lib/utils';
import HomeInfo from './HomeInfo.astro';
import { TableOfContents } from './TableOfContents';
import HomeSiderSegmented from '@components/ui/segmented/HomeSiderSegmented';
import { getLanguageFromUrl } from '@lib/i18n';
import { getTranslations } from '@i18n/index';

interface Props {
  type?: HomeSiderType;
  className?: string;
  isDrawer?: boolean;
}

const { type = HomeSiderType.HOME, className, isDrawer = false } = Astro.props;
const defaultSegmentType = type === HomeSiderType.POST ? HomeSiderSegmentType.DIRECTORY : HomeSiderSegmentType.INFO;

// 获取当前语言和翻译
const currentLanguage = getLanguageFromUrl(Astro.url);
const translations = getTranslations(currentLanguage);
---

<div
  class={cn('page-home-sider sticky top-0 flex max-w-[16rem] min-w-[16rem] flex-col tablet:hidden items-center p-4', className)}
  transition:name={isDrawer ? 'page-home-sider-drawer' : 'page-home-sider'}
>
  {
    type === HomeSiderType.POST && (
      <HomeSiderSegmented
        client:load
        className="mb-5 flex w-full justify-between text-sm/6"
        itemClass="grow"
        options={[
          { label: translations.common.siteOverview, value: HomeSiderSegmentType.INFO },
          { label: translations.common.articleDirectory, value: HomeSiderSegmentType.DIRECTORY },
        ]}
        defaultValue={defaultSegmentType}
        id="inner-home-sider"
      />
    )
  }

  <!-- 使用条件渲染替代自定义 Web Component -->
  <div class="w-full overflow-auto" data-type={type} data-default-type={defaultSegmentType}>
    {
      type === HomeSiderType.HOME || defaultSegmentType === HomeSiderSegmentType.INFO ? (
        <div>
          <HomeInfo />
        </div>
      ) : type === HomeSiderType.POST && defaultSegmentType === HomeSiderSegmentType.DIRECTORY ? (
        <div>
          <TableOfContents client:load />
        </div>
      ) : null
    }
  </div>
</div>

<script>
  import { HomeSiderType, HomeSiderSegmentType } from '@constants/enum';
  import { homeSiderSegmentType } from '@store/app';

  // 获取所有相关的 DOM 元素
  const homeSider = document.querySelector('.page-home-sider');
  if (homeSider) {
    const segmentControl = homeSider.querySelector('#inner-home-sider');
    const infoContent = homeSider.querySelector('[data-content="info"]');
    const directoryContent = homeSider.querySelector('[data-content="directory"]');

    // 如果是文章页面，添加事件监听器
    if (segmentControl && infoContent && directoryContent) {
      const handleChange = (e) => {
        const value = e.detail?.value;
        if (value === HomeSiderSegmentType.DIRECTORY) {
          infoContent.classList.add('hidden');
          directoryContent.classList.remove('hidden');
        } else {
          infoContent.classList.remove('hidden');
          directoryContent.classList.add('hidden');
        }
      };

      segmentControl.addEventListener('change', handleChange);
    }
  }
</script>
