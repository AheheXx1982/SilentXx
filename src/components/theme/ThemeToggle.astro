<!-- inspired by https://codepen.io/aaroniker/pen/raaMMGx -->
<div
  class="theme-toggle scale-90 cursor-pointer transition duration-300 hover:scale-110"
  id="theme-toggle-btn"
  role="button"
  tabindex="0"
  aria-label="toggle theme"
>
  <label class="toggle" aria-label="toggle theme">
    <input type="checkbox" id="theme-checkbox" />
    <div></div>
  </label>
</div>

<script>
  function setupThemeToggle() {
    const toggleBtn = document.getElementById('theme-toggle-btn');
    const checkbox = document.getElementById('theme-checkbox') as HTMLInputElement | null;
    if (!toggleBtn || !checkbox) return;

    // 检查按钮是否已经绑定过事件，防止重复绑定
    if (toggleBtn.dataset.listenerAttached === 'true') return;

    const rootElement = document.documentElement;

    // 初始化checkbox状态 - 深色模式下checkbox应为选中状态
    const isDarkMode = rootElement.classList.contains('dark');
    checkbox.checked = isDarkMode;

    // 切换主题的函数
    function toggleTheme() {
      if (!checkbox) return;

      const isDark = checkbox.checked;

      // 获取切换按钮的位置作为动画起点
      const toggleElement = document.querySelector('.theme-toggle');
      let x = window.innerWidth / 2;
      let y = window.innerHeight / 2;

      if (toggleElement) {
        const rect = toggleElement.getBoundingClientRect();
        x = rect.left + rect.width / 2;
        y = rect.top + rect.height / 2;
      }

      // 添加特定的主题切换类，用于区分页面切换和主题切换的过渡效果
      rootElement.classList.add('theme-transition');

      // 使用 View Transitions API 创建过渡动画
      if (!document.startViewTransition) {
        // 浏览器不支持 View Transitions API 时降级处理
        applyTheme(isDark);
        // 移除主题过渡类
        setTimeout(() => {
          rootElement.classList.remove('theme-transition');
        }, 100);
        return;
      }

      const transition = document.startViewTransition(() => {
        applyTheme(isDark);
      });

      transition.ready
        .then(() => {
          rootElement.style.setProperty('--x', `${x}px`);
          rootElement.style.setProperty('--y', `${y}px`);
        })
        .catch((error) => {
          console.error('过渡动画设置错误:', error);
        });

      // 过渡完成后移除主题过渡类
      transition.finished
        .then(() => {
          rootElement.classList.remove('theme-transition');
        })
        .catch(() => {
          rootElement.classList.remove('theme-transition');
        });
    }

    // 应用主题
    function applyTheme(isDark: boolean): void {
      if (isDark) {
        rootElement.classList.add('dark');
        rootElement.classList.remove('light');
        localStorage.setItem('theme', 'dark');
      } else {
        rootElement.classList.remove('dark');
        rootElement.classList.add('light');
        localStorage.setItem('theme', 'light');
      }
    }

    // 监听输入变化事件
    checkbox.addEventListener('change', toggleTheme);
    // 标记按钮已绑定事件
    toggleBtn.dataset.listenerAttached = 'true';
  }

  // 首次加载时运行
  setupThemeToggle();

  // 在每次Astro页面加载后运行 (处理客户端路由)
  document.addEventListener('astro:page-load', setupThemeToggle);
</script>

<style>
  :root {
    --theme-toggle-color: currentColor;
  }
  .theme-toggle {
    z-index: 10;
  }

  .toggle {
    cursor: pointer;
    display: block;
  }

  .toggle input {
    display: none;
  }

  /* 默认状态（浅色模式）：太阳 */
  .toggle input + div {
    border-radius: 50%;
    width: 36px;
    height: 36px;
    position: relative;
    box-shadow: inset 16px -16px 0 0 var(--theme-toggle-color, #ffbb52);
    transform: scale(1) rotate(-2deg);
    transition:
      box-shadow 0.5s ease 0s,
      transform 0.4s ease 0.1s;
  }

  .toggle input + div:before {
    content: '';
    width: inherit;
    height: inherit;
    border-radius: inherit;
    position: absolute;
    left: 0;
    top: 0;
    background: transparent;
    transition: background 0.3s ease;
  }

  .toggle input + div:after {
    content: '';
    width: 8px;
    height: 8px;
    border-radius: 50%;
    margin: -4px 0 0 -4px;
    position: absolute;
    top: 50%;
    left: 50%;
    box-shadow:
      0 -23px 0 var(--theme-toggle-color, #ffbb52),
      0 23px 0 var(--theme-toggle-color, #ffbb52),
      23px 0 0 var(--theme-toggle-color, #ffbb52),
      -23px 0 0 var(--theme-toggle-color, #ffbb52),
      15px 15px 0 var(--theme-toggle-color, #ffbb52),
      -15px 15px 0 var(--theme-toggle-color, #ffbb52),
      15px -15px 0 var(--theme-toggle-color, #ffbb52),
      -15px -15px 0 var(--theme-toggle-color, #ffbb52);
    transform: scale(0);
    transition: all 0.3s ease;
  }

  /* 选中状态（深色模式）：月亮 */
  .toggle input:checked + div {
    box-shadow: inset 32px -32px 0 0 var(--theme-background-color, #17181c);
    transform: scale(0.5) rotate(0deg);
    transition:
      transform 0.3s ease 0.1s,
      box-shadow 0.2s ease 0s;
  }

  .toggle input:checked + div:before {
    background: var(--theme-toggle-color, #ffbb52);
    transition: background 0.3s ease 0.1s;
  }

  .toggle input:checked + div:after {
    transform: scale(1.5);
    transition: transform 0.5s ease 0.15s;
  }
</style>
