---
import HomeSider from '../../../components/layout/HomeSider.astro';
import Cover from '../../../components/ui/cover/Cover.astro';
import { getSiteConfig } from '@constants/site-config-i18n';
import { getTranslations } from '@i18n/index';
import type { SupportedLanguage } from '../../../types/i18n';
import Layout from '../../../layouts/Layout.astro';
import TwoColumnLayout from '../../../layouts/TwoColumnLayout.astro';
import { getAllTags, getSortedPosts } from '@lib/content';

// 获取当前语言
const currentLanguage: SupportedLanguage = 'zh-TW';
const siteConfig = getSiteConfig(currentLanguage);
const translations = getTranslations(currentLanguage);

// 获取语言前缀
const langPrefix = currentLanguage === 'zh-CN' ? '' : `/${currentLanguage}`;

const TAG_COLORS = [
  'from-blue-400/10 to-indigo-300/10 hover:from-blue-400/80 hover:to-indigo-300/80 text-blue-400/70 hover:text-blue-50',
  'from-pink-300/10 to-rose-200/10 hover:from-pink-300/80 hover:to-rose-200/80 text-pink-400/70 hover:text-pink-50',
  'from-violet-400/10 to-purple-300/10 hover:from-violet-400/80 hover:to-purple-300/80 text-violet-400/70 hover:text-violet-50',
  'from-sky-400/10 to-blue-300/10 hover:from-sky-400/80 hover:to-blue-300/80 text-sky-400/70 hover:text-sky-50',
];

const posts = await getSortedPosts();
const tags = getAllTags(posts);
const sortedTags = Object.entries(tags)
  .sort(([, a], [, b]) => b - a)
  .map(([tag, count]) => ({ tag, count }));
---

<Layout title={`${translations.tag.allTags} | ${siteConfig.title}`} description={translations.tag.allTags}>
  <TwoColumnLayout>
    <Cover slot="cover" title={translations.tag.allTags} />
    <HomeSider slot="sider" />
    <div class="shadow-box bg-gradient-start mx-0 flex w-full flex-col px-6 py-4 md:px-3 md:py-2">
      <h2 class="shoka-decoration-circle group relative h-19 px-7.5 py-5 text-2xl/9 font-bold">
        <a
          href={langPrefix || '/'}
          class="dashed-border text-muted-foreground group-hover:border-blue group-hover:text-blue border-b"
          >{translations.nav.home}</a
        >
        <span class="text-muted-foreground text-lg"> / </span>
        {translations.tag.allTags} - {sortedTags.length}
        {translations.common.tags}
      </h2>
      <div class="flex flex-wrap gap-3 p-4">
        {
          sortedTags.map(({ tag, count }, index) => (
            <div class="group relative">
              {/* 防止闪烁 */}
              <a
                href={`${langPrefix}/tags/${tag.replace(/\//g, '-')}`}
                class={`group relative flex items-center rounded-lg bg-linear-to-r px-3 py-1.5 text-sm transition-all duration-300 group-hover:-translate-y-0.5 group-hover:shadow-lg ${
                  TAG_COLORS[index % TAG_COLORS.length]
                }`}
              >
                <span class="font-medium">{tag}</span>
                <span class="ml-1.5 truncate rounded-full bg-white/10 px-1.5 text-xs">{count}</span>
              </a>
            </div>
          ))
        }
      </div>
    </div>
  </TwoColumnLayout>
</Layout>
