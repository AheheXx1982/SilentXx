---
import HomeSider from '../../../components/layout/HomeSider.astro';
import Cover from '../../../components/ui/cover/Cover.astro';
import { getSiteConfig } from '@constants/site-config-i18n';
import { getTranslations } from '@i18n/index';
import type { SupportedLanguage } from '../../../types/i18n';
import Layout from '../../../layouts/Layout.astro';
import TwoColumnLayout from '../../../layouts/TwoColumnLayout.astro';
import { getPostLastCategory, getSortedPosts } from '@lib/content';
import { parseDate } from '@lib/datetime';

export async function getStaticPaths() {
  const posts = await getSortedPosts();
  const tags = new Set<string>();

  posts.forEach((post) => {
    const postTags = post.data.tags || [];
    postTags.forEach((tag) => tags.add(tag));
  });

  return Array.from(tags).map((tag) => ({
    params: { tag: tag.replace(/\//g, '-') },
    props: {
      posts: posts.filter((post) => post.data.tags?.includes(tag)),
      tag,
    },
  }));
}

// 获取当前语言
const currentLanguage: SupportedLanguage = 'en';
const siteConfig = getSiteConfig(currentLanguage);
const translations = getTranslations(currentLanguage);

// 获取语言前缀
const langPrefix = currentLanguage === 'zh-CN' ? '' : `/${currentLanguage}`;

const { tag, posts } = Astro.props;
---

<Layout
  title={`${translations.tag.allTags}: ${tag} | ${siteConfig.title}`}
  description={`${translations.tag.postsWithTag}: ${tag}`}
>
  <TwoColumnLayout>
    <Cover slot="cover" title={`Posts tagged "${tag}"`} />
    <HomeSider slot="sider" />
    <div class="shadow-box bg-gradient-start mx-0 flex w-full flex-col px-6 py-4 md:px-3 md:py-2">
      <h2 class="shoka-decoration-circle has-children group relative h-19 px-7.5 py-5 text-2xl/9 font-bold">
        <a
          href={`${langPrefix}/tags`}
          class="dashed-border text-muted-foreground group-hover:border-blue group-hover:text-blue border-b"
          >{translations.tag.allTags}</a
        >
        <span class="text-muted-foreground text-lg"> / </span>
        <span class="text-muted-foreground">{tag}</span>
        <span class="text-muted-foreground text-lg">({posts.length} {translations.tag.postsWithTag})</span>
      </h2>
      {
        posts?.length ? (
          <div class="category-second-level-container flex flex-col">
            {posts.map((post) => {
              const { link, name } = getPostLastCategory(post);
              return (
                <p class="shoka-decoration-circle group text-primary relative px-7.5 py-2 text-base/9 md:overflow-visible">
                  <span class="text-muted-foreground inline-block w-15 text-xs md:relative md:-top-1">
                    {parseDate(post?.data?.date, 'YY-MM-DD')}
                  </span>
                  <a
                    href={`${langPrefix}${link}`}
                    class="text-muted-foreground hover:text-blue mr-2 inline-block text-xs md:relative md:-top-1"
                  >
                    {name}
                  </a>
                  <a
                    href={`${langPrefix}/article/${post?.data?.link ?? post?.slug?.split('/').pop() ?? post?.slug}`}
                    class="dashed-border md:absolute md:top-7 md:left-7"
                  >
                    {post?.data?.title}
                  </a>
                </p>
              );
            })}
          </div>
        ) : (
          <div class="text-muted-foreground p-4 text-center">{translations.tag.noPostsWithTag}</div>
        )
      }
    </div>
  </TwoColumnLayout>
</Layout>
