---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { parseDate } from '@lib/datetime';
import { getSiteConfig } from '@constants/site-config-i18n';
import { getTranslations } from '@i18n/index';
import { getLanguageFromUrl } from '@lib/i18n';
import type { SupportedLanguage } from '../types/i18n';
import TwoColumnLayout from '@layouts/TwoColumnLayout.astro';
import Cover from '@components/ui/cover/Cover.astro';
import HomeSider from '@components/layout/HomeSider.astro';
import { getAvailableLanguages, getPostTranslation } from '@lib/article-i18n';

const { url } = Astro;
const currentLanguage = getLanguageFromUrl(url) || 'zh-CN';
const siteConfig = getSiteConfig(currentLanguage);
const translations = getTranslations(currentLanguage);

// 获取语言前缀
const langPrefix = currentLanguage === 'zh-CN' ? '' : `/${currentLanguage}`;

// 获取所有文章
const allPosts = await getCollection('blog');

// 过滤出在当前语言下有内容的文章
const posts = allPosts.filter((post) => {
  const availableLanguages = getAvailableLanguages(post);
  return availableLanguages.includes(currentLanguage);
});

// 获取带翻译信息的文章列表
const postsWithTranslations = posts.map((post) => {
  const translation = getPostTranslation(post, currentLanguage);
  return {
    ...post,
    translatedTitle: translation.title,
    isTranslated: translation.isTranslated,
    fallbackToOriginal: translation.fallbackToOriginal,
  };
});

// 按年份对文章进行分组
const postsByYear = postsWithTranslations
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .reduce(
    (acc, post) => {
      const year = new Date(post.data.date).getFullYear();
      if (!acc[year]) {
        acc[year] = [];
      }
      acc[year].push(post);
      return acc;
    },
    {} as Record<number, typeof postsWithTranslations>,
  );

const years = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));
---

<Layout title={`${translations.archive.allPosts} | ${siteConfig.title}`} description={translations.archive.allPosts}>
  <TwoColumnLayout>
    <Cover slot="cover" title={translations.archive.allPosts} />
    <HomeSider slot="sider" />
    <div class="shadow-box bg-gradient-start mx-0 flex w-full flex-col px-6 py-4 md:px-3 md:py-2">
      <h2 class="shoka-decoration-circle group relative h-19 px-7.5 py-5 text-2xl/9 font-bold md:text-xl/9">
        <a
          href={langPrefix || '/'}
          class="dashed-border text-muted-foreground group-hover:border-blue group-hover:text-blue border-b"
          >{translations.nav.home}</a
        >
        <span class="text-muted-foreground text-lg md:text-base"> / </span>
        {translations.archive.allPosts} - {postsWithTranslations.length}
        {translations.archive.postsInYear}
      </h2>
      <div class="flex flex-col gap-4 md:gap-5">
        {
          years.map((year) => (
            <div>
              <h3 class="text-xl font-bold md:text-base">
                {year}
                <span class="text-muted-foreground ml-2 text-base md:text-sm">
                  {postsByYear[Number(year)].length} {translations.archive.postsInYear}
                </span>
              </h3>
              <div class="mt-2">
                {postsByYear[Number(year)].map((post) => (
                  <p class="shoka-decoration-circle group text-primary hover:text-blue relative px-7.5 py-2 text-base/9 md:flex md:flex-col md:items-stretch md:text-sm/9">
                    <span class="text-muted-foreground mr-2 text-xs">{parseDate(post.data.date, 'YYYY-MM-DD')}</span>
                    <a
                      href={`${langPrefix}/article/${post.data?.link ?? post.slug.split('/').pop() ?? post.slug}`}
                      class="dashed-border text-primary hover:text-blue truncate transition-colors"
                    >
                      {post.translatedTitle}
                      {post.isTranslated && (
                        <span class="ml-1 text-xs text-green-600" title="已翻译">
                          [T]
                        </span>
                      )}
                      {post.fallbackToOriginal && (
                        <span class="ml-1 text-xs text-orange-600" title="原文显示">
                          [O]
                        </span>
                      )}
                    </a>
                  </p>
                ))}
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </TwoColumnLayout>
</Layout>
