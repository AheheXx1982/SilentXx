---
import { categoryMap } from '@constants/category';
import type { Category } from '@lib/content';
import CategoryTitle from './CategoryTitle.astro';
import SubCategory from './SubCategory.astro';
import { getCategoryLink } from '@lib/content';

interface Props {
  categories: Category[];
  countMap: Record<string, number>;
  totalCount: number;
}

interface CategoryLink {
  category: Category;
  link: string;
}

const { categories, countMap, totalCount } = Astro.props;

const categoryLinks: CategoryLink[] = await Promise.all(
  categories.map(async (category: Category) => {
    return {
      category,
      link: await getCategoryLink([category.name]),
    };
  }),
);
---

<div class="shadow-box bg-gradient-start mx-0 flex w-full flex-col px-6 py-4 md:px-3 md:py-2">
  <h2 class="shoka-decoration-circle group relative px-7.5 py-5 text-2xl/9 font-bold">
    <a href="/" class="dashed-border text-muted-foreground group-hover:border-blue group-hover:text-blue border-b"> 首页 </a>
    <span class="text-muted-foreground text-xl">/</span> 目前共计 {totalCount} 个分类
  </h2>

  <div class="flex w-full flex-col">
    {
      categoryLinks.map(({ category, link }: CategoryLink) => (
        <>
          <CategoryTitle
            title={category.name}
            count={countMap[category.name]}
            href={`/categories${link ? '/' + link : ''}`}
            className={category?.children?.length ? 'has-children' : ''}
          />
          {category?.children?.length && (
            <div class="category-first-level-container flex flex-col">
              {category?.children?.length &&
                category.children.map((child: Category) => (
                  <SubCategory category={child} parentName={category.name} countMap={countMap} />
                ))}
            </div>
          )}
        </>
      ))
    }
  </div>
</div>
