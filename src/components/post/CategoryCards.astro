---
import { Badge } from '@components/ui/badge.tsx';
import { Button } from '@components/ui/button.tsx';
import { categoryMap } from '@constants/category';
import { Routes } from '@constants/router';
import { getSiteConfig } from '@constants/site-config-i18n';
import { getCategoryByLink, getCategoryList, getParentCategory, getPostsByCategory, type Category } from '@lib/content';
import { getLanguageFromUrl, getLocalizedUrl } from '@lib/i18n';
import { getTranslations } from '@i18n/index';
import { routeBuilder } from '@lib/route';
import { cn } from '@lib/utils';
import { getPostTranslation, hasTranslation } from '@lib/article-i18n';
import { getTranslatedCategoryName } from '@lib/category-i18n';
import type { CollectionEntry } from 'astro:content';
import FlippedCard from './FlippedCard.astro';
import { Icon } from 'astro-icon/components';

interface CategoryWithPosts {
  link: string;
  label?: string;
  image: string;
  posts: CollectionEntry<'blog'>[];
  category: Category | null;
  parentCategory: Category | null;
}

// 获取当前语言和翻译，确保有默认值
const currentLanguage = getLanguageFromUrl(Astro.url) || 'zh-CN';
const translations = getTranslations(currentLanguage);
const siteConfig = getSiteConfig(currentLanguage);

const { categories } = await getCategoryList();

const categoryPosts: CategoryWithPosts[] = await Promise.all(
  siteConfig.featuredCategories?.map(async (category) => {
    const categoryInfo = getCategoryByLink(categories, category?.link);
    const allPosts = await getPostsByCategory(categoryInfo?.name ?? '');
    // 根据当前语言筛选支持翻译的文章
    const filteredPosts = allPosts.filter((post) => hasTranslation(post, currentLanguage));
    return {
      link: category.link,
      label: category?.label,
      image: category.image,
      category: categoryInfo,
      parentCategory: getParentCategory(categoryInfo, categories),
      posts: filteredPosts,
    };
  }) || [],
);
---

<div class="grid w-full grid-cols-2 gap-4 md:grid-cols-1">
  {
    categoryPosts.map((category, idx) => {
      const parentCategory = category?.parentCategory;
      const parentCategoryLink = parentCategory
        ? getLocalizedUrl(Routes.Categories + '/' + (category?.link.split('/').slice(0, -1).join('/') ?? ''), currentLanguage)
        : '';
      const categoryInfo = category?.category;
      const categoryLink = getLocalizedUrl(Routes.Categories + '/' + (category?.link ?? ''), currentLanguage);
      const childrenLen = categoryInfo?.children?.length ?? 0;
      const posts = category?.posts?.slice(0, 6 - (childrenLen ?? 0));

      return (
        <FlippedCard>
          <div slot="front" class="flex-center relative h-full rounded-md px-2 py-4">
            <img
              src={category.image}
              alt={category.label}
              class="absolute inset-0 -z-10 h-full w-full rounded-md object-cover"
            />
            <div class="bg-shoka-card-mask absolute inset-0 -z-10 h-full w-full rounded-md opacity-25" />
            <h2 class="text-2xl text-white">
              {category?.label ?? (categoryInfo ? getTranslatedCategoryName(categoryInfo.name, currentLanguage) : '')}
            </h2>
            {parentCategory?.name ? (
              <Badge variant="shoka-tag" className="absolute right-3 top-2.5 text-xs text-white opacity-80 shadow-sm">
                {getTranslatedCategoryName(parentCategory.name, currentLanguage)}
              </Badge>
            ) : null}
          </div>
          <div slot="back" class="bg-card relative h-full flex-col rounded-md px-6 pt-16 pb-4">
            <div
              class={cn(
                'from-gradient-shoka-button-start to-gradient-shoka-button-end absolute top-4 -left-4 inline-block h-8 max-w-[calc(100%+2rem)] rounded-r-md border bg-linear-to-l pr-4 pl-6',
                "after:absolute after:top-full after:-left-4 after:h-0 after:w-0 after:border-t-0 after:border-r-16 after:border-b-16 after:border-l-16 after:border-transparent after:content-['']",
                'after:border-r-gradient-shoka-button-end',
              )}
            >
              <a class="hover:animate-shake mt-1.5 block text-base/4 text-white" href={categoryLink}>
                {category?.label || (categoryInfo ? getTranslatedCategoryName(categoryInfo.name, currentLanguage) : '')}
              </a>
            </div>
            <div class="grid grid-cols-2 gap-x-5 gap-y-3">
              {categoryInfo?.children?.length
                ? categoryInfo.children.map((child) => {
                    // 修复：直接拼接链接，避免重复添加语言前缀
                    const childLink = categoryLink + '/' + categoryMap[child?.name];
                    return (
                      <a
                        href={childLink}
                        class="text-primary hover:text-blue truncate text-left transition-colors duration-300"
                      >
                        {getTranslatedCategoryName(child.name, currentLanguage)}
                      </a>
                    );
                  })
                : null}
              {posts.map((post) => {
                // 获取文章的翻译信息
                const postTranslation = getPostTranslation(post, currentLanguage);
                // 使用当前URL生成本地化的文章链接
                const postHref = routeBuilder(Routes.Post, post, Astro.url);
                return (
                  <a href={postHref} class="text-primary hover:text-blue truncate text-left transition-colors duration-300">
                    {postTranslation.title}
                  </a>
                );
              })}
            </div>
            <p class="text-muted-foreground absolute bottom-4 left-6 flex items-center text-sm">
              {parentCategory?.name ? (
                <a
                  href={parentCategoryLink}
                  class="group hover:text-blue mr-1 flex cursor-pointer items-center transition duration-300"
                >
                  <Icon name="ri:flag-fill" class="mr-0.5 text-base" />
                  <span class="mr-2">{getTranslatedCategoryName(parentCategory.name, currentLanguage)}</span>
                </a>
              ) : null}
              <>
                <Icon name="gg:loadbar-doc" class="mr-0.5 text-base" />
                {categoryInfo?.children?.length
                  ? categoryInfo.children.length + ' ' + translations.common.childrenCategory
                  : ''}
                {category.posts?.length + ' ' + translations.common.articlesCount}
              </>
            </p>
            <a href={categoryLink} aria-label="more info" class="absolute right-0 bottom-0">
              <Button
                className={cn(
                  'bg-gradient-shoka-button rounded-2xl rounded-se-none rounded-es-none transition-all hover:translate-x-1 hover:translate-y-1 hover:scale-105 md:h-7 md:px-2 md:py-1 md:text-xs',
                )}
              >
                {translations.common.more}
              </Button>
            </a>
          </div>
        </FlippedCard>
      );
    })
  }
</div>

<style>
  /* 添加一些过渡效果 */
  .flip-card-front,
  .flip-card-back {
    transition: all 600ms ease-in-out;
  }
</style>
